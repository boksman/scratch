import json

def convert_to_json(data):
    # Custom JSON encoder class
    class CustomEncoder(json.JSONEncoder):
        def default(self, obj):
            if isinstance(obj, YourClassName):
                # Convert the object to a dictionary representation
                return obj.__dict__
            return super().default(obj)

    # Convert objects to JSON
    json_data = json.dumps(data, cls=CustomEncoder)

    return json_data

def parse_from_json(json_data):
    # Custom JSON decoder function
    def object_decoder(obj):
        if '__class__' in obj:
            class_name = obj['__class__']
            if class_name == 'YourClassName':
                # Create an instance of YourClassName and populate its attributes
                your_object = YourClassName()
                your_object.__dict__ = obj
                return your_object
        return obj

    # Parse JSON data back into objects
    data = json.loads(json_data, object_hook=object_decoder)

    return data
